/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.96
 * Generated at: 2024-02-09 17:21:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import vo.ReplyVo;
import vo.BoardVo;

public final class board_005fdetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("vo.BoardVo");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("vo.ReplyVo");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String loginId = "YG";   // 나중에, session.getAttribute("loginId") 로 변경할 것.
							 // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	BoardVo vo = (BoardVo) request.getAttribute("boardVO");
	ArrayList<ReplyVo> listReplyVo = (ArrayList<ReplyVo>)request.getAttribute("listReply");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<title>Insert title here</title>\r\n");
      out.write("	<script src=\"js/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		$(function() {\r\n");
      out.write("			$(\"#btn_to_list\").click(function() {\r\n");
      out.write("				//history.back(-1);\r\n");
      out.write("				location.href = \"Controller?command=board_list&page=1\";   // (단순화) 1페이지 목록보기로 이동.\r\n");
      out.write("			});\r\n");
      out.write("			$(\"#btn_modify\").click(function() {\r\n");
      out.write("				location.href = \"Controller?command=board_modify_form&bno=");
      out.print(vo.getBno());
      out.write("\";\r\n");
      out.write("			});\r\n");
      out.write("			$(\"#btn_delete\").click(function() {\r\n");
      out.write("				location.href = \"Controller?command=board_delete&bno=");
      out.print(vo.getBno());
      out.write("\";\r\n");
      out.write("			});\r\n");
      out.write("			$(\".btn_delete_reply\").click(function() {\r\n");
      out.write("				let rno = $(this).parent().attr(\"rno\");\r\n");
      out.write("				//alert(rno);\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url: 'Controller',\r\n");
      out.write("					type: 'post',\r\n");
      out.write("					data: {\"rno\":rno, \"command\":\"ajax_reply_delete\"},\r\n");
      out.write("					success: function(data) {\r\n");
      out.write("						if(data.result=='OKAY') {\r\n");
      out.write("							alert(\"삭제되었습니다.\");\r\n");
      out.write("							$(\".reply\").each(function(index, item) {\r\n");
      out.write("								if($(item).attr(\"rno\")==rno) {\r\n");
      out.write("									$(item).remove();\r\n");
      out.write("								}\r\n");
      out.write("							})\r\n");
      out.write("						}\r\n");
      out.write("					},\r\n");
      out.write("					error: function(request, status, error) {\r\n");
      out.write("						alert(\"에러 코드 : \" + request.status);\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("	<style>\r\n");
      out.write("		table { border-collapse: collapse; border: 1px solid grey; }\r\n");
      out.write("		td, th { font-size:14px; border: 1px solid grey; }\r\n");
      out.write("		th { width:150px; }\r\n");
      out.write("		td { width:650px; }\r\n");
      out.write("		.reply > span:nth-child(1) { display: inline-block; width: 20%; }\r\n");
      out.write("		.btn_delete_reply { font-weight:bold; color:red; }\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>게시글 상세보기</h1>\r\n");
      out.write("	<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>글 번호</th>\r\n");
      out.write("			<td>");
      out.print(vo.getBno() );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>작성자</th>\r\n");
      out.write("			<td>");
      out.print(vo.getWriter() );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>작성일시</th>\r\n");
      out.write("			<td>");
      out.print(vo.getWritedate() );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>제목</th>\r\n");
      out.write("			<td>");
      out.print(vo.getTitle() );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>내용</th>\r\n");
      out.write("			<td>");
      out.print(vo.getContent() );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>	\r\n");
      out.write("	<button id=\"btn_to_list\">목록보기</button>\r\n");
      out.write("	<button id=\"btn_modify\">수정하기</button>\r\n");
      out.write("	<button id=\"btn_delete\">삭제하기</button>\r\n");
      out.write("	<div id=\"div_reply\">\r\n");
      out.write("		");
 for(ReplyVo replyVo : listReplyVo) { 
      out.write("\r\n");
      out.write("		<div class=\"reply\" rno=\"");
      out.print(replyVo.getRno());
      out.write("\">\r\n");
      out.write("			<span>");
      out.print(replyVo.getContent() );
      out.write("</span> \r\n");
      out.write("			<span>");
      out.print(replyVo.getWriter() );
      out.write("님</span> \r\n");
      out.write("			/ ");
      out.print(replyVo.getWritedate().split(" ")[0] );
      out.write("\r\n");
      out.write("			");
 if(loginId.equals(replyVo.getWriter())) { 
      out.write("\r\n");
      out.write("				<button class=\"btn_delete_reply\">x</button>\r\n");
      out.write("			");
 } 
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		");
 } 
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
